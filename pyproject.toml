[tool.poetry]
name = "meilisync-admin"
version = "0.1.0"
description = "Realtime sync data from MySQL/PostgreSQL/MongoDB to meilisearch"
authors = ["long2ice <long2ice@gmail.com>"]
readme = "README.md"
documentation = "https://github.com/meilisync/meilisync-admin"
include = ["CHANGELOG.md", "LICENSE", "README.md"]
keywords = ["meilisearch", "postgres", "mysql"]
license = "Apache-2.0"
packages = [
    { include = "meilisync_admin" },
]
repository = "https://github.com/meilisync/meilisync-admin.git"

[tool.poetry.dependencies]
python = "^3.9"
meilisync = { git = "https://github.com/meilisync/meilisync.git", extras = ["all"] }
tortoise-orm = "*"
aerich = "*"
fastapi = { version = "*", extras = ["all"] }
python-i18n = "*"
fastapi-jwt = "*"
asyncmy = {version = "^0.2.8rc1", allow-prereleases = true}
passlib = {version = "*", extras = ["bcrypt"]}
typer = {version = "*", extras = ["all"]}
pyconcrete = "*"
authlib = "*"
sentry-sdk = { version = "*", extras = ["fastapi"] }

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
mypy = "*"
pytest = "*"
ruff = "*"
pytest-custom-exit-code = "*"
types-aiofiles = "*"

[tool.aerich]
tortoise_orm = "meilisync_admin.settings.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
target-version = ['py37', 'py38', 'py39', 'py310']
preview = true

[tool.pytest.ini_options]
asyncio_mode = 'auto'

[tool.mypy]
ignore_missing_imports = true
pretty = true
plugins = ["pydantic.mypy"]
